"""
Django settings for DjangoMeta project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from django.conf import settings as django_settings
from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '5f@e=7e+togvv^olx(pp3zt=!5&dwyt7!)ovh+&6icxi@bli2&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'metas.apps.MetasConfig',
    # Django-Meta permet aux développeurs Django d'ajouter rapidement des balises méta et des propriétés OpenGraph,
    # Twitter et Google Plus à leurs pages HTML
    'meta',
    #Sekizai utilise render_block et addtoblock pour gérer des extraits de code uniques
    'sekizai',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'DjangoMeta.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                #Sekizai utilise render_block et addtoblock pour gérer des extraits de code uniques
                'sekizai.context_processors.sekizai',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoMeta.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'DjangoMeta/static')
]

BLOG_URLCONF = 'DjangoMeta.blog_urls'


SITE_PROTOCOL = getattr(django_settings, 'META_SITE_PROTOCOL', None)
SITE_DOMAIN = getattr(django_settings, 'META_SITE_DOMAIN', None)
SITE_TYPE = getattr(django_settings, 'META_SITE_TYPE', None)
SITE_NAME = getattr(django_settings, 'META_SITE_NAME', None)
INCLUDE_KEYWORDS = getattr(django_settings, 'META_INCLUDE_KEYWORDS', [])
DEFAULT_KEYWORDS = getattr(django_settings, 'META_DEFAULT_KEYWORDS', [])
IMAGE_URL = getattr(django_settings, 'META_IMAGE_URL', django_settings.STATIC_URL)
USE_OG_PROPERTIES = getattr(django_settings, 'META_USE_OG_PROPERTIES', False)
USE_TWITTER_PROPERTIES = getattr(django_settings, 'META_USE_TWITTER_PROPERTIES', False)
USE_FACEBOOK_PROPERTIES = getattr(django_settings, 'META_USE_FACEBOOK_PROPERTIES', False)
USE_GOOGLEPLUS_PROPERTIES = getattr(django_settings, 'META_USE_GOOGLEPLUS_PROPERTIES', False)
USE_SITES = getattr(django_settings, 'META_USE_SITES', False)
USE_TITLE_TAG = getattr(django_settings, 'META_USE_TITLE_TAG', False)
OG_NAMESPACES = getattr(django_settings, 'META_OG_NAMESPACES', None)

OBJECT_TYPES = (
    ('Article', _('Article')),
    ('Website', _('Website')),
)
TWITTER_TYPES = (
    ('summary', _('Summary Card')),
    ('summary_large_image', _('Summary Card with Large Image')),
    ('product', _('Product')),
    ('photo', _('Photo')),
    ('player', _('Player')),
    ('app', _('App')),
)
FB_TYPES = OBJECT_TYPES
GPLUS_TYPES = (
    ('Article', _('Article')),
    ('Blog', _('Blog')),
    ('WebPage', _('Page')),
    ('WebSite', _('WebSite')),
    ('Event', _('Event')),
    ('Product', _('Product')),
    ('Place', _('Place')),
    ('Person', _('Person')),
    ('Book', _('Book')),
    ('LocalBusiness', _('LocalBusiness')),
    ('Organization', _('Organization')),
    ('Review', _('Review')),
)

OG_SECURE_URL_ITEMS = getattr(django_settings, 'META_OG_SECURE_URL_ITEMS', ('image', 'audio', 'video'))
DEFAULT_IMAGE = getattr(django_settings, 'META_DEFAULT_IMAGE', '')
DEFAULT_TYPE = getattr(django_settings, 'META_SITE_TYPE', OBJECT_TYPES[0][0])
FB_TYPE = getattr(django_settings, 'META_FB_TYPE', OBJECT_TYPES[0][0])
FB_TYPES = getattr(django_settings, 'META_FB_TYPES', FB_TYPES)
FB_APPID = getattr(django_settings, 'META_FB_APPID', '')
FB_PROFILE_ID = getattr(django_settings, 'META_FB_PROFILE_ID', '')
FB_PUBLISHER = getattr(django_settings, 'META_FB_PUBLISHER', '')
FB_AUTHOR_URL = getattr(django_settings, 'META_FB_AUTHOR_URL', '')
FB_PAGES = getattr(django_settings, 'META_FB_PAGES', '')
TWITTER_TYPE = getattr(django_settings, 'META_TWITTER_TYPE', TWITTER_TYPES[0][0])
TWITTER_TYPES = getattr(django_settings, 'META_TWITTER_TYPES', TWITTER_TYPES)
TWITTER_SITE = getattr(django_settings, 'META_TWITTER_SITE', '')
TWITTER_AUTHOR = getattr(django_settings, 'META_TWITTER_AUTHOR', '')
GPLUS_TYPE = getattr(django_settings, 'META_GPLUS_TYPE', GPLUS_TYPES[0][0])
GPLUS_TYPES = getattr(django_settings, 'META_GPLUS_TYPES', GPLUS_TYPES)
GPLUS_AUTHOR = getattr(django_settings, 'META_GPLUS_AUTHOR', '')
GPLUS_PUBLISHER = getattr(django_settings, 'META_GPLUS_PUBLISHER', '')
